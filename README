Has_Image
========

Has image was created as a smaller, simpler, lighter alternative to
attachment_fu for applications that need to handle uploaded images.

attachment_fu:

* creates a separate database record for each thumbnail, then never uses them
	for anything.
* recreates all the thumbnails every time you save your model - even if you 
	only edited the database fields.
* is big - designed for attachments in general, not specialized for images,
	and has a gazillion options for storage and processors
* provides no facility out-of-the box for making square thumbnails without
	distortion.
* is hard to make work with a Javascript-based thumbnail cropper (like on digg
  or mypictr.com)
* is not fun to hack

By contrast, has_image:

* creates one record per image, no matter how many thumbnails you make.
* is specialized, opinionated and perhaps even a little bit dumb. Has_image
  has extremely humble aspirations - it only does images, only uses local
  storage and only uses MiniMagick...
* ...BUT is easy to hack if you want to change it to work with AWS or another
	image processing library
* provides cropping methods so you can create an image cropper if you want.

Why not just add this functionality to attachment_fu?

I find attachment_fu not very fun to hack on. Also... laziness, impatience
and most of all, hubris.

Examples
=======

Point-and-drool use case:

class Photo < ActiveRecord::Base
	has_image
end

This will resize the uploaded image down to an 800x800 max (whichever axis is
larger), and make a ton of thumbnails you might (but probably don't) need.
Basically, it does this:

class Photo < ActiveRecord::Base
	has_image :resize_to => "800x800",
		:thumbnails => {
		  :square => "75x75",
		  :thumb  => "100x75",
		  :small  => "240x180",
		  :medium => "500x375",
		},
		:max_size => 3.megabytes,
		:min_size => 4.kilobytes
end

Hacking
=======

Don't like the way it makes images? Want to pipe the images through some crazy
seam carving library written in OCaml, or watermark them with your corporate
logo? Happiness is just a monkey-patch away:

module HasImage
	class Processor
		def create_thumbnail(size)
			# my new-and-improved thumbnailer code goes here.
		end
	end
end

Has image is designed to work with Rails 2.1 and is installed via Ruby Gems;
no need for a plugin. To use it in your app, install the gem:

gem install norman-has_image --source http://gems.github.com

and add 

require 'has_image'

to your environment.rb file.

Git repository: 

http://github.com/norman/has_image



Copyright (c) 2008 Norman Clarke <norman@randomba.org>, released under the MIT
license